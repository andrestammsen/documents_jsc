
BRAINSTORM JHG 190218 --------------------------------------------------------------------------------------------------

Testprogramm		aus Kommandozeile endet auf 0 oder 1 -> alles gut oder nicht aus Visualisierung
			-> GitLab-Ordner mit readme schoen erklaert

Ziel			Workflow steht bis Ende Maerz

Unterscheidung		zwischen Funktionalitaet und Performance

Funktionstest		fuer Visualisierung erst nur Paraview (evtl. Kompilate noetig)
			erst nur GPU, dann mit Mesa, mit Parastation_MPI und Intel und GCC, OpenGL ...

Korrektheitstest	Korrektheit der Visualisierung ueber Bildvergleich testen
			-> nicht per Pixel, bitweise, RGB o.ae.; muss gewissen Fehler beinhalten; Kanten, Farben ...
			-> evtl. Mittelwert eines Blocks, z.B. 16x16, mit Abweichungstoleranz
			-> z.B. leichter Grauwert aus Schattierung egal, komplett andere Farbe nicht
			-> lieber zu streng (false positive oder so)

Hilfsprogramm		ImageMagick zur Auswertung der Unterschiede; damit Diskussion ueber Programm dafuer beendet

Paraview Versionen	muessen im setup beruecksichtigt werden, jedes halbe Jahr neue Version
			-> spaeter durchwuehlen um zu sehen, was es alles so gibt

Setups			erst haendisch settings erstellen -> spaeter Sprung zu Jupe, wenn alles funktioniert
			-> erst komplettes setting suchen fuer Testen des Bildvergleichs

Git			Ordner hat hohe Bedeutung; gesamte Integration sollte dort stattfinden
			Unterteilung des repos in Referenzbilder, readme, Beispiele, Statistiken, Tests ...

Continuous Integration	vielleicht in meinem Fall nicht wertvoll, da nur Tests ueber Skripte ineinander gesteckt werden
			-> Idee: Test zu verschiedenen Themen des Programms
				 Master gepflegt: Tests laufen auf allen Systemen, kompiliert, funktionell, Doku ....
			-> yvml: wichtigste Datei zum Ansteuern der Skripte mit GitLab -> gitlab runner -> Docker-Ordner
			-> Wiki dazu von JHG checken (minimaler CI-Test, nur ein MPI-Befehl fuer Ablauf)
			-> mit CMake gebaut, nicht direkt auf mich uebertragbar

